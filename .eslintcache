[{"C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\index.js":"1","C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\App.js":"2","C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\reportWebVitals.js":"3","C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\Footer\\Footer.js":"4","C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\Schedule\\Schedule.js":"5","C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\Schedule\\Timestrip\\Timestrip.js":"6","C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\Schedule\\Channels\\Channels.js":"7","C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\Schedule\\Channels\\ChannelStrip\\ChannelStrip.js":"8","C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\InfoPanel\\InfoPanel.js":"9","C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\Schedule\\Channels\\ChannelStrip\\ProgramBlock.js":"10","C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\Schedule\\OnDemand\\OnDemand.js":"11","C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\Schedule\\OnDemand\\OnDemandButton\\OnDemandButton.js":"12","C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\Schedule\\OnDemand\\EpisodeLibrary\\EpisodeLibrary.js":"13","C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\Schedule\\OnDemand\\EpisodeLibrary\\EpisodeListButton\\EpisodeListButton.js":"14","C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\Schedule\\Channels\\ChannelStrip\\NewChannelStrip.js":"15"},{"size":517,"mtime":1612306012960,"results":"16","hashOfConfig":"17"},{"size":618,"mtime":1612645998228,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":477,"mtime":1612401988844,"results":"20","hashOfConfig":"17"},{"size":3085,"mtime":1612654644129,"results":"21","hashOfConfig":"17"},{"size":1942,"mtime":1612300790371,"results":"22","hashOfConfig":"17"},{"size":3558,"mtime":1613119260002,"results":"23","hashOfConfig":"17"},{"size":8976,"mtime":1612925881074,"results":"24","hashOfConfig":"17"},{"size":3117,"mtime":1612991150707,"results":"25","hashOfConfig":"17"},{"size":322,"mtime":1612639682850,"results":"26","hashOfConfig":"17"},{"size":2123,"mtime":1612658002433,"results":"27","hashOfConfig":"17"},{"size":927,"mtime":1612654624840,"results":"28","hashOfConfig":"17"},{"size":1461,"mtime":1612656913956,"results":"29","hashOfConfig":"17"},{"size":427,"mtime":1612656540772,"results":"30","hashOfConfig":"17"},{"size":8111,"mtime":1613097668300,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"y2y4nh",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},"C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\index.js",[],["65","66"],"C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\App.js",[],"C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\reportWebVitals.js",[],"C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\Schedule\\Schedule.js",[],"C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\Schedule\\Timestrip\\Timestrip.js",[],"C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\Schedule\\Channels\\Channels.js",[],"C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\Schedule\\Channels\\ChannelStrip\\ChannelStrip.js",[],["67","68"],"C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\InfoPanel\\InfoPanel.js",[],"C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\Schedule\\Channels\\ChannelStrip\\ProgramBlock.js",[],"C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\Schedule\\OnDemand\\OnDemand.js",[],"C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\Schedule\\OnDemand\\OnDemandButton\\OnDemandButton.js",[],"C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\Schedule\\OnDemand\\EpisodeLibrary\\EpisodeLibrary.js",[],"C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\Schedule\\OnDemand\\EpisodeLibrary\\EpisodeListButton\\EpisodeListButton.js",[],"C:\\Users\\18569\\Documents\\Code\\tubecast-v2\\src\\components\\Schedule\\Channels\\ChannelStrip\\NewChannelStrip.js",["69","70"],"import React from 'react'\r\nimport ProgramBlock from \"./ProgramBlock\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./channel-strip.css\"\r\n\r\nconst CRChannelStrip = ({ name, schedule, timeDigit, ampm, passIdChann, sendPrograms }) => {\r\n\r\n    //get the channel name and digits\r\n    let end = parseInt(name.channelText.length);\r\n    let num = name.channelText.slice(0, 3);\r\n    let channel = name.channelText.slice(3, end);\r\n\r\n    //get time information\r\n    let hour = parseInt(timeDigit.slice(0, 1));\r\n    let zeroOrThirty = parseInt(timeDigit.slice(2, 3));\r\n\r\n    if (timeDigit.slice(1, 2) !== \":\") {\r\n        hour = parseInt(timeDigit.slice(0, 2));\r\n        zeroOrThirty = parseInt(timeDigit.slice(3, 4));\r\n    }\r\n\r\n    //should you want to spoof the clock...do it here\r\n    // //!!**!!**CHECK THIS BEFORE YOU THINK THE SCHEDULE HAS A BUG **!!**!!\r\n    // hour = 3\r\n    // zeroOrThirty = 0\r\n    // ampm = \"pm\"\r\n\r\n    if (zeroOrThirty >= 3) {\r\n        hour = hour + .5\r\n    }\r\n\r\n    //define current programming for channel\r\n\r\n    let programs = [];\r\n\r\n\r\n    for (let i = 0; i < schedule.length; i++) {\r\n        let program = {\r\n            hour: schedule[i].hour,\r\n            ampm: schedule[i].ampm,\r\n            name: schedule[i].name,\r\n            id: schedule[i].id,\r\n            length: schedule[i].length,\r\n            currentCSS: \"\",\r\n        }\r\n\r\n        if (program.length === .5) {\r\n            program.cssFirst = [\"two-to-three\"]\r\n            program.timesFirst = [program.hour]\r\n        } else if (program.length === 1) {\r\n            program.cssFirst = [\"two-to-four\", \"two-to-three\"]\r\n            program.timesFirst = [program.hour, program.hour + .5]\r\n        } else if (program.length === 1.5) {\r\n            program.cssFirst = [\"full\", \"two-to-four\", \"two-to-three\"]\r\n            program.timesFirst = [program.hour, program.hour + .5, program.hour + 1]\r\n        } else if (program.length === 2) {\r\n            program.cssFirst = [\"full\", \"full\", \"two-to-four\", \"two-to-three\"]\r\n            program.timesFirst = [program.hour, program.hour + .5, program.hour + 1, program.hour + 1.5]\r\n        }\r\n\r\n        if (program.length !== .5) {\r\n            program.cssNext = \"block three-to-five\"\r\n        } else {\r\n            program.cssNext = \"block three-to-four\"\r\n        }\r\n\r\n        program.timeNext = program.hour - .5\r\n        program.cssLast = \"block four-to-five\"\r\n        program.timeLast = program.hour - 1\r\n\r\n        for (let i = 0; i < program.timesFirst.length; i++) {\r\n            if (program.timesFirst[i] > 12.5) {\r\n                program.timesFirst[i] = (program.timesFirst[i] - 12)\r\n            }\r\n        }\r\n\r\n        if (program.timeNext < 1) {\r\n            program.timeNext = program.timeNext + 12\r\n        }\r\n        if (program.timeLast < 1) {\r\n            program.timeLast = program.timeLast + 12\r\n        }\r\n\r\n        programs.push(program);\r\n    }\r\n\r\n\r\n    function setProgramBlock(css, id, name) {\r\n        let pb = <ProgramBlock\r\n            _css={css}\r\n            passId={passId}\r\n            id={id}\r\n            key={id}\r\n            name={name}\r\n        />;\r\n\r\n        return pb;\r\n    }\r\n\r\n    let allPrograms = programs.map(program => program)\r\n\r\n    programs = programs.filter(program => program.ampm === ampm)\r\n\r\n    // get the changeover timed programs when we need them.\r\n\r\n    let concatArr = [];\r\n\r\n    if (hour > 8 && hour < 12) {\r\n        if (ampm === \"pm\") {\r\n            programs = allPrograms.filter(program => (program.hour >= 5.5) && (program.ampm === \"pm\" && program.hour < 12))\r\n            concatArr = allPrograms.filter(program => (program.hour === 12 && program.ampm === \"am\") || (program.hour <= 6 && program.ampm === \"am\"))\r\n            programs = programs.concat(concatArr);\r\n        } else {\r\n            programs = allPrograms.filter(program => (program.hour >= 5.5) && (program.ampm === \"am\" && program.hour < 12))\r\n            concatArr = allPrograms.filter(program => (program.hour === 12 && program.ampm === \"pm\") || (program.hour <= 6 && program.ampm === \"pm\"))\r\n            programs = programs.concat(concatArr);\r\n        }\r\n    } else {\r\n        programs = programs.filter(program => program.ampm === ampm)\r\n    }\r\n\r\n    console.log(programs)\r\n\r\n    let onRightNow;\r\n    let onRightNowIndex;\r\n\r\n    for (let i = 0; i < programs.length; i++) {\r\n        for (let j = 0; j < programs[i].timesFirst.length; j++) {\r\n            if (programs[i].timesFirst[j] === hour) {\r\n                onRightNowIndex = programs.indexOf(programs[i])\r\n                onRightNow = programs[i]\r\n            }\r\n        }\r\n    }\r\n    let nextProgramIndex = onRightNowIndex + 1;\r\n    let nextProgram = programs[nextProgramIndex]\r\n    let lastProgramIndex = onRightNowIndex + 2;\r\n    let lastProgram = programs[lastProgramIndex]\r\n\r\n    console.log(onRightNow)\r\n    console.log(nextProgram)\r\n    console.log(lastProgram)\r\n\r\n    function getCurrentCSS(obj) {\r\n        let cssIndex = obj.timesFirst.indexOf(hour);\r\n        let currentCSS = \"block \" + obj.cssFirst[cssIndex];\r\n        return currentCSS\r\n    }\r\n\r\n    onRightNow.currentCSS = getCurrentCSS(onRightNow);\r\n\r\n    let whatsOn = [];\r\n\r\n    let dynamicNextCSS;\r\n\r\n    console.log(hour + 1 + \" is hour + 1\")\r\n\r\n    if (nextProgram.hour === hour + 1 || hour >= 12 && nextProgram.hour === hour + 1 - 12) {\r\n        dynamicNextCSS = \"block four-to-five\"\r\n    } else {\r\n        if (nextProgram.length === .5)\r\n            dynamicNextCSS = \"block three-to-four\"\r\n        else {\r\n            dynamicNextCSS = \"block three-to-five\"\r\n        }\r\n    }\r\n\r\n    let oneProgram = whatsOn = [setProgramBlock(onRightNow.currentCSS, onRightNow.id, onRightNow.name)];\r\n\r\n    let twoPrograms = whatsOn = [setProgramBlock(onRightNow.currentCSS, onRightNow.id, onRightNow.name),\r\n    setProgramBlock(dynamicNextCSS, nextProgram.id, nextProgram.name)];\r\n\r\n    let threePrograms = whatsOn = [setProgramBlock(onRightNow.currentCSS, onRightNow.id, onRightNow.name),\r\n    setProgramBlock(dynamicNextCSS, nextProgram.id, nextProgram.name),\r\n    setProgramBlock(lastProgram.cssLast, lastProgram.id, lastProgram.name)];\r\n\r\n    //when the onRightNow is only a half hour long\r\n    if (hour === onRightNow.timesFirst[0] && onRightNow.length === .5) {\r\n        if (nextProgram.length >= 1) {\r\n            whatsOn = twoPrograms\r\n        } else {\r\n            whatsOn = threePrograms\r\n        }\r\n    } else if (hour === onRightNow.timesFirst[0] && onRightNow.length === 1) {\r\n        whatsOn = twoPrograms\r\n    } else if (hour === onRightNow.timesFirst[0] && onRightNow.length > 1) {\r\n        whatsOn = oneProgram\r\n\r\n        //if onRightNow has a second index in timesFirst and thats what time it is...\r\n    } else if (onRightNow.timesFirst[1] && hour === onRightNow.timesFirst[1]) {\r\n        if (onRightNow.length === 2) {\r\n            whatsOn = oneProgram\r\n        } else if (onRightNow.length === 1.5) {\r\n            whatsOn = twoPrograms\r\n        } else if (onRightNow.length === 1) {\r\n            if (nextProgram.length >= 1) {\r\n                whatsOn = twoPrograms\r\n            } else {\r\n                whatsOn = threePrograms\r\n            }\r\n        }\r\n    } else if ((onRightNow.timesFirst[2] && hour === onRightNow.timesFirst[2]) ||\r\n        (onRightNow.timesFirst[3] && hour === onRightNow.timesFirst[3])) {\r\n        if (nextProgram.length >= 1) {\r\n            whatsOn = twoPrograms\r\n        } else {\r\n            whatsOn = threePrograms\r\n        }\r\n    }\r\n\r\n    //lift up the proper video ID onClick\r\n\r\n    function passId(id) {\r\n        passIdChann(id);\r\n    }\r\n\r\n    function sendThePrograms(arr) {\r\n        sendPrograms(arr);\r\n    }\r\n\r\n    return (\r\n        <div className=\"channel-strip-container\">\r\n            <Link\r\n                to=\"/on-demand\"\r\n                className=\"name\"\r\n                onClick={() => sendThePrograms(schedule)}\r\n            >\r\n                <h4 className=\"number\">{num}</h4>\r\n                <h4 className=\"title\">{channel}</h4>\r\n            </Link>\r\n            {whatsOn.map(\r\n                program => program\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CRChannelStrip",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"71","replacedBy":"75"},{"ruleId":"73","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":158,"column":39,"nodeType":"79","messageId":"80","endLine":158,"endColumn":41},{"ruleId":"77","severity":1,"message":"78","line":158,"column":53,"nodeType":"79","messageId":"80","endLine":158,"endColumn":55},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],["81"],["82"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation"]